package domain

import (
	"context"
	"my_app/src/infrastructure"
)

type {{.Name}} struct {
	// TODO: implement me!
}

type D{{.Name}} = infrastructure.DataDecorator[{{.Name}}]

type {{.Name}}Crud interface {
	infrastructure.CrudRepository[any, {{.Name}}]
	// tu jakie≈õ nowe w razie czego
}

func New{{.Name}}Service(repository {{.Name}}Crud) *{{.Name}}Service {
	return &{{.Name}}Service{repository: repository}
}

type {{.Name}}Service struct {
	// Dependency injection
	repository {{.Name}}Crud
}

func (s *{{.Name}}Service) Get{{.Name}}s(ctx context.Context, query any) ([]D{{.Name}}, error) {
	return s.repository.Get(ctx, query)
}
